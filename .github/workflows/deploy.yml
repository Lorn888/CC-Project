name: Deploy via CloudFormation

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }} 
          aws-region: eu-west-1

      - name: Verify AWS Credentials
        run: |
          aws sts get-caller-identity
        shell: pwsh

      - name: Create S3 Bucket if Not Exists
        run: |
          $bucketExists = aws s3api head-bucket --bucket cc-lambda-function-bucket --region eu-west-1
          if ($LASTEXITCODE -ne 0) {
            aws s3 mb s3://cc-lambda-function-bucket --region eu-west-1
          }
        shell: pwsh

      - name: Zip Lambda functions
        id: zip
        run: |
          $timestamp = (Get-Date).ToString("yyyyMMddHHmmss")
          Compress-Archive -Path .\extract-transform-lambda\* -DestinationPath extract-transform-lambda-$timestamp.zip
          Compress-Archive -Path .\load-lambda\* -DestinationPath load-lambda-$timestamp.zip
          echo "TIMESTAMP=$timestamp" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Upload Lambda package to S3
        run: |
          aws s3 cp extract-transform-lambda-${{ env.TIMESTAMP }}.zip s3://cc-lambda-function-bucket/
          aws s3 cp load-lambda-${{ env.TIMESTAMP }}.zip s3://cc-lambda-function-bucket/
        shell: pwsh

      - name: Deploy CloudFormation Stack
        run: |
          aws cloudformation deploy `
            --template-file template.yaml `
            --stack-name my-stack `
            --parameter-overrides `
              S3Bucket=cc-lambda-function-bucket `
              S3BucketName=coffee-cartel-bucket `
              SSMParameterName=coffee_cartel_redshift_settings `
              ExtractTransformLambdaCodeKey=extract-transform-lambda-${{ env.TIMESTAMP }}.zip `
              LoadLambdaCodeKey=load-lambda-${{ env.TIMESTAMP }}.zip `
            --capabilities CAPABILITY_NAMED_IAM
        shell: pwsh
